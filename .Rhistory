library(sp)
library(gstat)
library(dbscan)
library(som)
library(tidyverse)
library(ggExtra)
library(Rmisc)
library(gridExtra)
library(grid)
#Importing data from raw spreadsheet; data source: Adegoke et al (1980)
RawData = read.csv(file.choose(),header=T)
RawData$BoreHole = as.factor(RawData$BoreHole) #Ensuring R sees the Borehole numbers as ID and not as numerals
View(RawData)
BitumenSG = 0.9679 #Falebita et al (2014)
GrainDensity = 2.58 #Ola (1991)
PoroCutoff = 0.5
#computations
WaterContentWTPCT = RawData$WET.TAR.WEIGHT..-RawData$DRY.TAR.WEIGHT..
TarWtgram = 0.01*RawData$DRY.TAR.WEIGHT..*20
WaterWTgram = 0.01*WaterContentWTPCT*20
GrainWTgram = 0.01*(100-RawData$WET.TAR.WEIGHT..)*20
TarVolCC = TarWtgram/BitumenSG
WaterVolCC = WaterWTgram/1
GrainVolCC = GrainWTgram/GrainDensity
Porosity = (TarVolCC+WaterVolCC)/(TarVolCC+WaterVolCC+GrainVolCC)
#Constructing the data table to include raw and computed data
ComputedData = cbind(RawData,WaterContentWTPCT,TarWtgram,WaterWTgram,GrainWTgram,TarVolCC,WaterVolCC,GrainVolCC,Porosity)
remove(WaterContentWTPCT,TarWtgram,WaterWTgram, GrainWTgram, TarVolCC, WaterVolCC,GrainVolCC, Porosity,pos=1)
#Excluding spurious/suspicious data: data rows with porosity above the cut off
TrimmedData = ComputedData[ComputedData$Porosity<PoroCutoff&!ComputedData$Horizon=="", ]
View(ComputedData)
View(TrimmedData)
ActualDepths = read.csv(file.choose(),header=T)
TrimmedData$DEPTH.m. =ActualDepths
Coordinates = round(read.csv(file.choose(),header=T),digits = 2)
SmartTrimmedData = data.frame(TrimmedData$BoreHole,TrimmedData$DEPTH.m.,round(TrimmedData$Porosity, digits = 4),Coordinates$Easting,Coordinates$Northing)
View(SmartTrimmedData)
#On CUT2 data (Samples between Q1-IQR and Q3+IQR )
SpatialTrimmedDataCUT2 = SmartTrimmedData[SmartTrimmedData$Porosity<0.3994&SmartTrimmedData$Porosity>0.0826, ]
View(SpatialTrimmedDataCUT2)
View(SmartTrimmedData)
SmartTrimmedData = data.frame(TrimmedData$BoreHole,TrimmedData$DEPTH.m.,round(TrimmedData$Porosity, digits = 4),Coordinates$Easting,Coordinates$Northing)
View(SmartTrimmedData)
names(SmartTrimmedData) = c("BoreHoleID", "Depth", "Porosity", "x", "y")
#On CUT2 data (Samples between Q1-IQR and Q3+IQR )
SpatialTrimmedDataCUT2 = SmartTrimmedData[SmartTrimmedData$Porosity<0.3994&SmartTrimmedData$Porosity>0.0826, ]
View(SpatialTrimmedDataCUT2)
#names(SpatialTrimmedDataCUT2) = c("BoreHoleID", "Depth", "Porosity", "x", "y")
coordinates(SpatialTrimmedDataCUT2) = c("x","y","Depth")
Porosity_VariogramCloudCUT2_90_22.5 = variogram(Porosity~1,SpatialTrimmedDataCUT2, cutoff = 8000, alpha = 90, tol.hor = 22.5, cloud = TRUE)
ggplot(data = Porosity_VariogramCloudCUT2_90_22.5)+
geom_point(mapping = aes(x = dist, y = gamma), color = "blue")+
labs(x = "Lag Distance, m", y = "Porosity Pair Variogram")+
scale_x_continuous(breaks = seq(0, 8000, by = 1000))+
scale_y_continuous(breaks = seq(0, 0.06, by = 0.01))
ggsave("Porosity Variogram Cloud_CUT2_90_22.5.jpg", path = "C://Users//TTOWG//645//1 karia def//2. CU//Projects//Bitumen Recovery//Data Analysis//Spatial Analysis//Agbabu Spatial Analysis using gstat//Plots//Field-wide Porosity Analysis", dpi = 96)
ggplot(data = Porosity_VariogramCloudCUT2_90_22.5)+
geom_point(mapping = aes(x = dist, y = gamma), color = "blue")+
labs(x = "Lag Distance, m", y = "Porosity Pair Variogram")+
scale_x_continuous(breaks = seq(0, 8000, by = 1000))+
scale_y_continuous(breaks = seq(0, 0.06, by = 0.01))
ggsave("Porosity Variogram Cloud_CUT2_90_22.5.jpg", dpi = 96)
ggplot(data = Porosity_VariogramCloudCUT2_90_22.5)+
geom_point(mapping = aes(x = dist, y = gamma), color = "blue")+
labs(x = "Lag Distance, m", y = "Porosity Pair Variogram")+
scale_x_continuous(breaks = seq(0, 8000, by = 1000))+
scale_y_continuous(breaks = seq(0, 0.06, by = 0.01))
ggsave("Porosity Variogram Cloud_CUT2_90_22.5.jpg", dpi = 96)
ggsave("Porosity Variogram Cloud_CUT2_90_22.5_marginal.jpg", dpi = 96)
CloudMarginal = ggplot(data = Porosity_VariogramCloudCUT2_90_22.5)+
geom_point(mapping = aes(x = dist, y = gamma), color = "blue")+
labs(x = "Lag Distance, m", y = "Porosity Pair Variogram")+
scale_x_continuous(breaks = seq(0, 8000, by = 1000))+
scale_y_continuous(breaks = seq(0, 0.06, by = 0.01))
ggMarginal(CloudMarginal, type = "histogram", margins = "x")
ggsave("Porosity Variogram Cloud_CUT2_90_22.5_marginal.jpg", dpi = 96)
CloudMarginal = ggplot(data = Porosity_VariogramCloudCUT2_90_22.5)+
geom_point(mapping = aes(x = dist, y = gamma), color = "blue")+
labs(x = "Lag Distance, m", y = "Porosity Pair Variogram")+
scale_x_continuous(breaks = seq(0, 8000, by = 1000))+
scale_y_continuous(breaks = seq(0, 0.06, by = 0.01))
ggMarginal(CloudMarginal, type = "histogram", margins = "x", color = "green")
ggsave("Porosity Variogram Cloud_CUT2_90_22.5_marginal.jpg", dpi = 96)
CloudMarginal = ggplot(data = Porosity_VariogramCloudCUT2_90_22.5)+
geom_point(mapping = aes(x = dist, y = gamma), color = "blue")+
labs(x = "Lag Distance, m", y = "Porosity Pair Variogram")+
scale_x_continuous(breaks = seq(0, 8000, by = 1000))+
scale_y_continuous(breaks = seq(0, 0.06, by = 0.01))
ggMarginal(CloudMarginal, type = "histogram", margins = "x", fill = "green")
CloudMarginal = ggplot(data = Porosity_VariogramCloudCUT2_90_22.5)+
geom_point(mapping = aes(x = dist, y = gamma), color = "blue")+
labs(x = "Lag Distance, m", y = "Porosity Pair Variogram")+
scale_x_continuous(breaks = seq(0, 8000, by = 1000))+
scale_y_continuous(breaks = seq(0, 0.06, by = 0.01))
ggMarginal(CloudMarginal, type = "histogram", margins = "x", fill = "green")
ggsave("Porosity Variogram Cloud_CUT2_90_22.5_marginal.jpg", dpi = 96)
write.table(Porosity_VariogramCloudCUT2_90_22.5,"Porosity_VariogramCloudCUT2_90_22.5.csv", sep = ",", row.names = F)
CloudMarginal = ggplot(data = Porosity_VariogramCloudCUT2_90_22.5)+
geom_point(mapping = aes(x = dist, y = gamma), color = "blue")+
labs(x = "Lag Distance, m", y = "Porosity Pair Variogram")+
scale_x_continuous(breaks = seq(0, 8000, by = 1000))+
scale_y_continuous(breaks = seq(0, 0.06, by = 0.01))
ggMarginal(CloudMarginal, type = "histogram", margins = "x", fill = "green")
ggsave("Porosity Variogram Cloud_CUT2_90_22.5_marginal.jpg", dpi = 96)
# Obtaining empirical variogram - conventional approach (bin-based)
Porosity_VariogramCUT2_90_22.5 = variogram(Porosity~1,SpatialTrimmedDataCUT2, cutoff = 8000, alpha = 90, tol.hor = 22.5)
ggplot(data = Porosity_VariogramCUT2_90_22.5)+
geom_point(mapping = aes(x = dist, y = gamma), color = "blue")+
labs(x = "Lag Distance, m", y = "Porosity Empirical Variogram")+
coord_cartesian(xlim = c(0, 8000), ylim = c(0, 0.006))+
scale_x_continuous(breaks = seq(0, 8000, by = 1000))+
scale_y_continuous(breaks = seq(0, 0.006, by = 0.001))+
geom_line(color = "red",aes(x = dist, y = gamma))
ggsave("Porosity Emperical Variogram_CUT2_90_22.5.jpg", dpi = 96)
binbasedVariogModel_90 = fit.variogram(Porosity_VariogramCUT2_90_22.5, vgm("Sph","Exp","Gau"),fit.sills = TRUE, fit.ranges = TRUE)
binbasedFitRsquared_90 = function(expvar,modvar){
SSErr = attr(modvar,"SSErr")
weight = expvar$np/(expvar$dist^2) #This is the weight factor for the default fit.method
SST = sum((weight*(expvar$gamma-mean(expvar$gamma)))^2)
R_sq<-1-SSErr/SST
return(R_sq)
}
binbasedFitRsqd_90 = round(binbasedFitRsquared_90(Porosity_VariogramCUT2_90_22.5,binbasedVariogModel_90),4)
binbasedRsqdposter_90 = Porosity_VariogramCUT2_90_22.5 %>%
summarise(dist = 1000,gamma = 0.0002,binbasedRsqdposterstring_90 = paste("Goodness of Fit, R-squared = ",binbasedFitRsqd_90,sep=""))
binbasedVariogModelFunc_90 = function(x){
ifelse(x <= binbasedVariogModel_90$range[2], (binbasedVariogModel_90$psill[1]+(binbasedVariogModel_90$psill[2]*((1.5*(x/binbasedVariogModel_90$range[2]))-(0.5*((x/binbasedVariogModel_90$range[2])^3))))), sum(binbasedVariogModel_90$psill))
}
ggplot(data = Porosity_VariogramCUT2_90_22.5, aes(x = dist, y = gamma))+
geom_point(aes(shape = "mu"), color = "blue")+
labs(x = "Lag Distance, h (m)", y = expression(Variogram~gamma))+
coord_cartesian(xlim = c(0, 8000), ylim = c(0, max(Porosity_VariogramCUT2_90_22.5$gamma,0.005)))+
scale_x_continuous(breaks = seq(0, 8000, by = 1000))+
scale_y_continuous(breaks = seq(0, max(max(Porosity_VariogramCUT2_90_22.5$gamma)+0.001,0.005), by = 0.001))+
stat_function(aes(x = dist, color = 'jj'), fun = binbasedVariogModelFunc_90, xlim = c(0, 8000))+
geom_text(aes(label = binbasedRsqdposterstring_90 ), data = binbasedRsqdposter_90, vjust = "bottom", hjust = "left")+
scale_colour_manual(name = '', values =c('jj'='red'), labels = expression(model:0.0034+0.0011*Sph[4766]*(h)))+
scale_shape_manual(name = '', values = c('mu' = 16), labels = c('empirical'))+
theme(legend.position=c(0.6, 0.3))+
theme(legend.title = element_blank())+
theme(legend.background = element_rect(fill="lightgrey", size=0.5, linetype="solid"))
ggsave("Porosity Emperical&Fitted Variogram_CUT2_90_22.5_binbased.jpg", dpi = 96)
